package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"

	"github.com/icaroribeiro/go-code-challenge-template-2/internal/presentation/api/gqlgen/graph/generated"
	presentableentity "github.com/icaroribeiro/go-code-challenge-template-2/internal/presentation/api/gqlgen/graph/presentity"
)

// GetHealthCheck is the resolver for the getHealthCheck field.
func (r *queryResolver) GetHealthCheck(ctx context.Context) (*presentableentity.HealthCheck, error) {
	if err := r.HealthCheckService.GetStatus(); err != nil {
		return nil, err
	}

	return &presentableentity.HealthCheck{
		Status: "everything is up and running",
	}, nil
}

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
